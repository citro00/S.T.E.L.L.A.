FROM python:3.11-slim

RUN apt-get update && apt-get install -y --no-install-recommends \
    iproute2 iputils-ping curl busybox libgomp1 \
    procps netcat-openbsd jq bind9-dnsutils traceroute mtr-tiny \
    tcpdump libpcap0.8 vim-tiny less \
 && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Codice e entrypoint
COPY disc-api/app /app/app
COPY disc-api/requirements.txt /app/requirements.txt
COPY disc-api/entrypoint_disc.sh /usr/local/bin/entrypoint_disc.sh
RUN chmod +x /usr/local/bin/entrypoint_disc.sh

# Artifacts baked
RUN mkdir -p /artifacts /out_pipeline
COPY out_pipeline/artifacts/features.json  /artifacts/features.json
COPY out_pipeline/artifacts/scaler.pkl     /artifacts/scaler.pkl
COPY out_pipeline/artifacts/models/        /artifacts/models/

RUN pip install --no-cache-dir -r /app/requirements.txt

# === CONFIG MODELLO (come prima)
ENV MODEL_PATH="/artifacts/models/discriminator_best.keras" \
    SCALER_PATH="/artifacts/scaler.pkl" \
    FEATS_PATH="/artifacts/features.json" \
    VAL_CSV="/out_pipeline/gan_val_raw.csv" \
    AUTO_TUNE=0 TAU_FAKE=0.90 TAU_MAL=0.70 MODEL_VERSION="1.0.0"

# === QUI PASSO Lâ€™IP DAL DOCKERFILE (come nel tuo esempio) ===
ENV IFACE=eth0
ENV HOST_IP=10.0.0.20          
ENV HOST_NETMASK=24           

EXPOSE 8000
ENTRYPOINT ["/usr/local/bin/entrypoint_disc.sh"]
